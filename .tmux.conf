#tmux attach -t main || tmux new -s main
#if tmux in kitty throws "open terminal failed: can't find terminfo database", start tmux with -L<any socket name> flag instead
#/usr/local/bin/tmux new-session -A -s main
unbind C-b
set-option -g prefix `
bind ` send-prefix

bind R source-file ~/.tmux.conf\; display "Reloaded!"  #reload configuration
bind h select-pane -L                                  #vim style pane navigation
bind j select-pane -D                                  #vim style pane navigation
bind k select-pane -U                                  #vim style pane navigation
bind l select-pane -R                                  #vim style pane navigation
bind e last-window                                     #replaces <prefix>l
bind C-k clear-history                                 #clear scrollback buffer
# <prefix>! to break current pane into its own window
bind-key @ break-pane \; last-window            #break current pane into another window
bind-key S choose-window 'join-pane -v -s "%%"' #join a window into a pane Split horizontally
bind-key V choose-window 'join-pane -h -s "%%"' #join a window into a pane split Vertically
set -sg escape-time 0 #set escape delay (lag) to 0
#set -g status off
set -g focus-events on
set -g default-terminal "screen-256color"
#set-option -g history-limit 1000 #increase this number to something bigger when you need it

set -g mouse on
# sane scrolling:
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -sel clip -i"
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

#Statusbar

# set -g status-bg colour34
set -g status-bg colour8

set -g status-fg colour103

setw -g window-status-current-bg colour8

# setw -g window-status-current-fg colour15
setw -g window-status-current-fg colour103

# setw -g window-status-bg colour34
setw -g window-status-bg colour8

# setw -g window-status-fg colour0
setw -g window-status-fg colour103

setw -g window-status-current-attr bold,underscore

# set -g status-right '#{battery_status_bg} #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
# set -g status-right '#{battery_icon} #{battery_percentage}|%a %h-%d %H:%M'
# set -g status-right 'batt:#{battery_percentage}|%a %h-%d %H:%M'
set -g status-right '%a %h-%d %H:%M'
# set status-left-length 30 #extend max length for session name

#Easy window moving
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

#New windows/panes follow CWD
bind-key c new-window -c '#{pane_current_path}'
bind-key '"' split-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

#Sessions
#tmux ls                              list sessions
#tmux new -s <session_name>           new session
#tmux a -t <session_name>             attach to session
#tmux kill-session -t <session_name>  kill specific session
#tmux kill-server                     kill all tmux sessions
#C-b s          list current sessions
#C-b $          rename current session
#C-b d          detach session
#C-b (          previous session
#C-b )          next session
#C-b L          Last session

#Panes
#C-b "          split vertically (top/bottom)
#C-b %          split horizontally (left/right)
#C-b x          kill pane
#C-b o          go to the next pane (cycle through all of them)
#C-b ;          go to the ‘last’ (previously used) pane
#C-b q          show pane numbers
#C-b z          pane zoom
##Moving
#C-b {          move current pane to previous position
#C-b }          move current pane to next position
##Resizing
#C-b <M-dir>    resize pane in <direction> 5 units at a time
#C-b <M-1>      resize all panes equally (vertically)
#C-b <M-2>      resize all panes equally (horizontally)
#C-b <M-5>      resize all panes (tiled)

#Windows
#C-b !          break current pane into its own window
#C-b <0-9>      switch to window number <0-9>
#C-b n          switch to next window in list
#C-b p          switch to previous window in list
#C-b l          switch to last used window
#C-b &          kill current window
#C-b ,          rename current window

#Misc
#C-b ?          list shortcuts
#C-b :          show prompt

#Realtime Session Sharing (http://www.hamvocke.com/blog/remote-pair-programming-with-tmux/)
#tmux new -s shared_alice                #create a shared session called 'shared_alice"
#tmux new -s shared_bob -t shared_alice  #'shared_bob' is a new session synchronized with 'shared_alice'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
#     set -g @resurrect-capture-pane-contents 'on'
#     set -g @resurrect-save-shell-history 'on'
#     set -g @resurrect-strategy-nvim 'session'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
